name: Test Packaged SDKs

on:
  push:
    branches:
      - main
      - workflow-test/*

jobs:
  # Filter the changed paths so these jobs can run only on changes to the ufc test data, or if the current branch matches workflow-test/*
  check-path:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ github.ref == 'refs/heads/main' && steps.filter.outputs.ufc == 'true' || startsWith(github.ref, 'refs/heads/workflow-test/') }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ufc:
              - 'ufc/**'
              - '!ufc/**/*.md'

  test-node-sdk:
    needs: check-path
    if: needs.check-path.outputs.should_run == 'true'
    runs-on: ${{ matrix.platform == 'linux' && 'ubuntu-latest' || matrix.platform == 'macos' && 'macos-13' || matrix.platform == 'windows' && 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        platform: ['linux']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test-server-package
        with:
          platform: ${{ matrix.platform }}
          sdk_name: 'node-server-sdk'
          sdk_relay_dir: 'node-sdk-relay'
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          sdk_testing_project_id: ${{ vars.SDK_TESTING_PROJECT_ID }}
          sdk_testing_region: ${{ vars.SDK_TESTING_REGION }}

  test-php-sdk:
    runs-on: ${{ matrix.platform == 'linux' && 'ubuntu-latest' || matrix.platform == 'macos' && 'macos-13' || matrix.platform == 'windows' && 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        platform: ['linux']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test-server-package
        with:
          platform: ${{ matrix.platform }}
          sdk_name: 'eppo/php-sdk'
          sdk_relay_dir: 'php-sdk-relay'
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          sdk_testing_project_id: ${{ vars.SDK_TESTING_PROJECT_ID }}
          sdk_testing_region: ${{ vars.SDK_TESTING_REGION }}

  test-python-sdk:
    runs-on: ${{ matrix.platform == 'linux' && 'ubuntu-latest' || matrix.platform == 'macos' && 'macos-13' || matrix.platform == 'windows' && 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        platform: ['linux']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test-server-package
        with:
          platform: ${{ matrix.platform }}
          sdk_name: 'python-sdk'
          sdk_relay_dir: 'python-sdk-relay'
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          sdk_testing_project_id: ${{ vars.SDK_TESTING_PROJECT_ID }}
          sdk_testing_region: ${{ vars.SDK_TESTING_REGION }}

  test-ruby-sdk:
    runs-on: ${{ matrix.platform == 'linux' && 'ubuntu-latest' || matrix.platform == 'macos' && 'macos-13' || matrix.platform == 'windows' && 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        platform: ['linux']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test-server-package
        with:
          platform: ${{ matrix.platform }}
          sdk_name: 'eppo/ruby-sdk'
          sdk_relay_dir: 'ruby-sdk-relay'
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          sdk_testing_project_id: ${{ vars.SDK_TESTING_PROJECT_ID }}
          sdk_testing_region: ${{ vars.SDK_TESTING_REGION }}

  test-go-sdk:
    runs-on: ${{ matrix.platform == 'linux' && 'ubuntu-latest' || matrix.platform == 'macos' && 'macos-13' || matrix.platform == 'windows' && 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        platform: ['linux']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test-server-package
        with:
          platform: ${{ matrix.platform }}
          sdk_name: 'go-sdk'
          sdk_relay_dir: 'go-sdk-relay'
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          sdk_testing_project_id: ${{ vars.SDK_TESTING_PROJECT_ID }}
          sdk_testing_region: ${{ vars.SDK_TESTING_REGION }}
