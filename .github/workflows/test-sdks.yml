name: Test SDKs Locally

on:
  pull_request:
    branches: [ "*" ]
  
  workflow_dispatch:

jobs:
  
  test-java-sdk:
    uses: Eppo-exp/java-server-sdk/.github/workflows/lint-test-sdk.yml@tp/workflows/remote
    with:
      test_data_branch: ${{ github.head_ref || github.ref_name }}
      sdk_branch: main
  
  test-android-sdk:
    runs-on: macos-latest
    steps:
      - name: Check out Java SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/android-sdk'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: 'Set up GCP SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Restore gradle.properties
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        shell: bash
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "MAVEN_USERNAME=${MAVEN_USERNAME}" > ~/.gradle/gradle.properties
          echo "MAVEN_PASSWORD=${MAVEN_PASSWORD}" >> ~/.gradle/gradle.properties
      - name: Set up test data
        run: make test-data
      - name: Spin up emulator and run tests
        id: testing
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -dns-server 8.8.8.8
          script: |
            echo "Emulator started" 
            adb logcat -c                                     # clear logs
            mkdir -p app/                                     # create directory
            touch app/emulator.log                            # create log file
            chmod 777 app/emulator.log                        # allow writing to log file
            adb logcat | grep EppoSDK >> app/emulator.log &   # pipe all logcat messages into log file as a background process
            ./gradlew connectedCheck                          # run tests
      - name: Upload Emulator Logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: emulator logs
          path: app/emulator.log
      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: /Users/runner/work/sdk-test-data/sdk-test-data/eppo/build/reports/androidTests/connected/index.html

  test-node-server-sdk:
    uses: Eppo-exp/node-server-sdk/.github/workflows/lint-test-sdk.yml@tp/workflows/remote
    with:
      test_data_branch: ${{ github.head_ref || github.ref_name }}
      sdk_branch: main
  
  test-node-client-sdk:
    uses: Eppo-exp/js-client-sdk/.github/workflows/lint-test-sdk.yml@tp/workflows/remote
    with:
      test_data_branch: ${{ github.head_ref || github.ref_name }}
      sdk_branch: main

  test-react-native-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout React Native SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/react-native-sdk'
      - name: Setup
        uses: ./.github/actions/setup
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: yarn test --maxWorkers=2 --coverage
  
  test-python-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out Python SDK'
        uses: "actions/checkout@v3"
        with:
          repository: 'Eppo-exp/python-sdk'
      - name: Install Python 3.9
        uses: "actions/setup-python@v2"
        with: 
          python-version: '3.9.x'
      - name: "Install dependencies"
        run: |
          python -VV
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-test.txt
      - name: 'Set up GCP SDK to download test data'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Run tests
        run: make test
  
  test-php-sdk:
    uses: Eppo-exp/php-sdk/.github/workflows/run-tests.yml@tp/workflows/remote
    with:
      test_data_branch: ${{ github.head_ref || github.ref_name }}
      sdk_branch: main

  test-ruby-sdk:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Ruby SDK
      uses: actions/checkout@v3
      with:
          repository: 'Eppo-exp/ruby-sdk'
    - name: Set up Ruby 3
      uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
      with:
        ruby-version: 3.0.6
    - name: Install dependencies
      run: bundle install
    - name: Refresh test data
      run: bundle exec rake test_refreshed_data
    - name: Run tests
      run: bundle exec rake test
  
  test-ios-sdk:
    runs-on: macos-latest
    steps:
      - name: Checkout iOS SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/eppo-ios-sdk'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: Build
        run: make build
      - name: Pull test data
        run: make test-data
      - name: Run tests
        run: make test
  
  test-golang-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Go SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/golang-sdk'
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: go build -v ./...
      - name: 'Set up GCP SDK for downloading test data'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Run tests
        run: make test

  test-dotnet-sdk:
    uses: Eppo-exp/dot-net-server-sdk/.github/workflows/run-tests.yml@tp/workflows/remote
    with:
      test_data_branch: ${{ github.head_ref || github.ref_name }}
      sdk_branch: main
