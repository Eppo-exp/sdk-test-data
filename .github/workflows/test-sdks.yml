name: Test SDKs

on:
  push:
    branches:
      - main
  pull_request: #TODO: remove this before merge
    paths:
      - '**/*'

jobs:
  test-java-sdk:
    runs-on: macos-latest
    steps:
      - name: Check out Java SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/java-server-sdk'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: 'Set up GCP SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Run tests
        run: make test
  test-android-sdk:
    runs-on: macos-latest
    steps:
      - name: Check out Java SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/android-sdk'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: 'Set up GCP SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Restore gradle.properties
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }} #TODO: populate
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }} #TODO: populate
        shell: bash
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "MAVEN_USERNAME=${MAVEN_USERNAME}" > ~/.gradle/gradle.properties
          echo "MAVEN_PASSWORD=${MAVEN_PASSWORD}" >> ~/.gradle/gradle.properties
      - name: Spin up emulator
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 21
          script: ./gradlew connectedCheck
      - name: Run tests
        run: make test
  test-node-server-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out node server SDK'
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/node-server-sdk'
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - uses: actions/cache@v2
        with:
          path: './node_modules'
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('./yarn.lock') }}
      - name: Install root dependencies
        run: yarn --frozen-lockfile
        working-directory: ./
      - name: 'Set up GCP SDK for downloading test data'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Install sdk dependencies
        run: yarn --frozen-lockfile
        working-directory: ./
      - name: Run unit tests
        run: yarn test:unit
        working-directory: ./
  test-node-client-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out node client SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/js-client-sdk'
      - name: Use Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - uses: actions/cache@v2
        with:
          path: './node_modules'
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('./yarn.lock') }}
      - name: 'Set up GCP SDK for downloading test data'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Install SDK dependencies
        run: yarn --frozen-lockfile
        working-directory: ./
      - name: Run tests
        run: yarn test
        working-directory: ./
  test-react-native-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout React Native SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/react-native-sdk'
      - name: Setup
        uses: ./.github/actions/setup
      - name: Install dependencies
        run: yarn install
      - name: Run unit tests
        run: yarn test --maxWorkers=2 --coverage
  test-python-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out Python SDK'
        uses: "actions/checkout@v3"
        with:
          repository: 'Eppo-exp/python-sdk'
      - name: Install Python 3.9
        uses: "actions/setup-python@v2"
        with: 
          python-version: '3.9.x'
      - name: "Install dependencies"
        run: |
          python -VV
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-test.txt
      - name: 'Set up GCP SDK to download test data'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: "Run tests"
        run: make test
  test-php-sdk:
    runs-on: ubuntu-latest
    steps:
    - name: Check out PHP SDK
      uses: actions/checkout@v3
      with:
          repository: 'Eppo-exp/php-sdk'
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    - name: Run tests
      run: make test
  test-ruby-sdk:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Ruby SDK
      uses: actions/checkout@v3
      with:
          repository: 'Eppo-exp/ruby-sdk'
    - name: Set up Ruby 3
      uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
      with:
        ruby-version: 3.0.6
    - name: Install dependencies
      run: bundle install
    - name: Refresh test data
      run: bundle exec rake test_refreshed_data
    - name: Run tests
      run: bundle exec rake test
  test-ios-sdk:
    runs-on: macos-latest
    steps:
      - name: Checkout iOS SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/eppo-ios-sdk'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: Build
        run: make build
      - name: Pull test data
        run: make test-data
      - name: Run tests
        run: make test
  test-golang-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Go SDK
        uses: actions/checkout@v3
        with:
          repository: 'Eppo-exp/golang-sdk'
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: go build -v ./...
      - name: 'Set up GCP SDK for downloading test data'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Test
        run: make test
  test-dotnet-sdk:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Dot.net SDK
      uses: actions/checkout@v3
      with:
        repository: 'Eppo-exp/dot-net-server-sdk'
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: make build
    - name: Pull test data
      run: make test-data
    - name: Test
      run: make test